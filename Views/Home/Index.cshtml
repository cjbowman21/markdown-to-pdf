@{
    ViewData["Title"] = "Home Page";
}

@model string

<ul class="nav nav-tabs d-md-none mb-3" id="mobileTabs">
    <li class="nav-item">
        <button class="nav-link active" id="editor-tab" type="button">Editor</button>
    </li>
    <li class="nav-item">
        <button class="nav-link" id="preview-tab" type="button">Preview</button>
    </li>
</ul>

<div class="row">
    <div class="col-md-8 d-md-block" id="editorPane">
        <form method="post" asp-action="GeneratePdf">
            <textarea id="markdownInput" name="markdown" class="form-control" rows="25">@Model</textarea>
            <button type="submit" class="btn btn-primary mt-3">Generate PDF</button>
        </form>
    </div>
    <div class="col-md-4 d-none d-md-block" id="previewPane">
        <div id="preview" class="border p-3 h-100 overflow-auto"></div>
    </div>
</div>

@section Scripts {
    <script src="https://cdn.jsdelivr.net/npm/marked/marked.min.js"></script>
    <script>
        const input = document.getElementById('markdownInput');
        const preview = document.getElementById('preview');
        const editorPane = document.getElementById('editorPane');
        const previewPane = document.getElementById('previewPane');
        const editorTab = document.getElementById('editor-tab');
        const previewTab = document.getElementById('preview-tab');

        function updatePreview() {
            const cleaned = input.value.replace(/<!--\s*\{\{.*?\}\}\s*-->/g, '');
            preview.innerHTML = marked.parse(cleaned);
        }

        function showEditor() {
            editorPane.classList.remove('d-none');
            previewPane.classList.add('d-none');
            editorTab.classList.add('active');
            previewTab.classList.remove('active');
        }

        function showPreview() {
            previewPane.classList.remove('d-none');
            editorPane.classList.add('d-none');
            previewTab.classList.add('active');
            editorTab.classList.remove('active');
        }

        editorTab.addEventListener('click', showEditor);
        previewTab.addEventListener('click', showPreview);

        input.addEventListener('input', updatePreview);
        updatePreview();
    </script>
}
